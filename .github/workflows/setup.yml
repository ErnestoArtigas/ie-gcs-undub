on: [push]

jobs:
  building-multi-os-artefacts:
    runs-on: ${{ matrix.os }}
    name: A multi os runner

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.1.1

      - name: Setup python
        uses: actions/setup-python@v4.7.1
        with:
          python-version: '3.12'

      - name: Install python requirements
        run: python -m pip install pyinstaller -r requirements.txt

      # Yaspin doesn't work with Jupyter notebook on Windows runner or >$null.
      # Added a --no-jaspin-ouput to the script for the Windows runner.
      - name: Install librairies for Windows without jaspin output
        if: matrix.os == 'windows-latest'
        run: python setup-libraries.py --no-jaspin-output

      - name: Install librairies for non Windows runner
        if: matrix.os != 'windows-latest'
        run: python setup-libraries.py

      - name: Bundling the executable
        run: pyinstaller --onefile src/main.py

      - name: Packing the Linux executable
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir ie-gcs-undub-linux
          mkdir ie-gcs-undub-linux/lib
          mv dist/main ie-gcs-undub-linux/main
          mv .env ie-gcs-undub-linux/.env
          mv lib/* ie-gcs-undub-linux/lib
          # zip -r ie-gcs-undub-linux.zip ie-gcs-undub-linux/

      - name: Packing the Windows executable
        if: matrix.os == 'windows-latest'
        run: |
          mkdir ie-gcs-undub-windows
          mv dist/main.exe ie-gcs-undub-windows/main.exe
          mv .env ie-gcs-undub-windows/.env
          mv lib/ ie-gcs-undub-windows/lib/
          # zip -r ie-gcs-undub-windows.zip ie-gcs-undub-windows/

      - name: Packing the MacOS executable
        if: matrix.os == 'macos-latest'
        run: |
          mkdir ie-gcs-undub-macos
          mkdir ie-gcs-undub-macos/lib
          mv dist/main ie-gcs-undub-macos/main
          mv .env ie-gcs-undub-macos/.env
          mv lib/* ie-gcs-undub-macos/lib
          # zip -r ie-gcs-undub-macos.zip ie-gcs-undub-macos/

      - name: Archive Linux binary artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: ie-gcs-undub-linux
          path: ie-gcs-undub-linux

      - name: Archive Windows binary artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: ie-gcs-undub-windows
          path: ie-gcs-undub-windows
          
      - name: Archive MacOS binary artifact
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: ie-gcs-undub-macos
          path: ie-gcs-undub-macos

  create-release:
    name: Create a release with the previous built artefacts
    runs-on: ubuntu-latest
    needs: building-multi-os-artefacts
    if: ${{ always() && !cancelled() && needs.building-multi-os-artefacts.result == 'success' }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.1.1

      - name: Download artefacts
        uses: actions/download-artifact@v3
        
      - name: Display structure of downloaded files
        run: ls -R

      - name: Zip all releases
        run: |
          zip -r ie-gcs-undub-linux.zip ie-gcs-undub-linux/
          zip -r ie-gcs-undub-windows.zip ie-gcs-undub-windows/
          zip -r ie-gcs-undub-macos.zip ie-gcs-undub-macos/

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ie-gcs-undub-linux.zip
            ie-gcs-undub-windows.zip
            ie-gcs-undub-macos.zip
